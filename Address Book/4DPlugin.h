/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : Address Book
 #	author : miyako
 #	2015/09/15
 #
 # --------------------------------------------------------------------------------*/

#if VERSIONMAC
#define THIS_BUNDLE_ID @"com.4D.4DPlugin.AddressBook"
#include <AddressBook/AddressBook.h>
#include <AddressBook/ABAddressBookC.h>
#include <mutex>
#import <Contacts/Contacts.h>
#endif

#define AB_PEOPLE					0
#define AB_GROUPS					1
#define AB_RECORDS_ALL				0
#define AB_RECORDS_CREATED_SINCE	1
#define AB_RECORDS_MODIFIED_SINCE	2

void listenerInit(void);
void listenerLoop(void);
void listenerLoopStart(void);
void listenerLoopFinish(void);
void listenerLoopExecute(void);
void listenerLoopExecuteMethod(void);

//internal variable

typedef PA_long32 process_number_t;
typedef PA_long32 process_stack_size_t;
typedef PA_long32 method_id_t;
typedef PA_Unichar* process_name_t;

// --- Application
void AB_TERMINATE(sLONG_PTR *pResult, PackagePtr pParams);
void AB_LAUNCH(sLONG_PTR *pResult, PackagePtr pParams);

// --- People
void AB_Create_person(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Set_person_property(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_person_property(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Remove_person(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Set_person_properties(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_person_properties(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Set_person_image(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_person_image(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Person_get_vcard(sLONG_PTR *pResult, PackagePtr pParams);
void AB_QUERY_PEOPLE(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Create_person_with_vcard(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Set_person_flags(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_person_flags(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_me(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Set_me(sLONG_PTR *pResult, PackagePtr pParams);

// --- Group
void AB_Create_group(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Set_group_name(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_group_name(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Remove_group(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Remove_person_from_group(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Add_group_to_group(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Add_person_to_group(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Remove_group_from_group(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_people_in_group(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_groups_in_group(sLONG_PTR *pResult, PackagePtr pParams);

// --- Type Cast
void AB_Make_date(sLONG_PTR *pResult, PackagePtr pParams);
void AB_GET_DATE(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Make_address(sLONG_PTR *pResult, PackagePtr pParams);
void AB_GET_ADDRESS(sLONG_PTR *pResult, PackagePtr pParams);

// --- Address Book
void AB_GET_LIST(sLONG_PTR *pResult, PackagePtr pParams);

// --- Utilities
void AB_Get_localized_string(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_default_country_code(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_default_name_ordering(sLONG_PTR *pResult, PackagePtr pParams);

// --- Notification
void AB_Set_notification_method(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Get_notification_method(sLONG_PTR *pResult, PackagePtr pParams);

// --- Group II
void AB_Get_parent_groups(sLONG_PTR *pResult, PackagePtr pParams);

// --- Special
void AB_LIST_GROUP_PEOPLE(sLONG_PTR *pResult, PackagePtr pParams);
void AB_FIND_PEOPLE(sLONG_PTR *pResult, PackagePtr pParams);
void AB_GET_GROUP_GROUPS(sLONG_PTR *pResult, PackagePtr pParams);
void AB_GET_PERSON_GROUPS(sLONG_PTR *pResult, PackagePtr pParams);
void AB_REMOVE_FROM_PRIVACY_LIST(sLONG_PTR *pResult, PackagePtr pParams);
void AB_Request_permisson(sLONG_PTR *pResult, PackagePtr pParams);

typedef enum {
    
    request_permission_unknown = 0,
    request_permission_authorized = 1,
    request_permission_not_determined = 2,
    request_permission_denied = 3,
    request_permission_restricted = 4
    
}request_permission_t;
